----Starten des Programms----


Zum Starten des Programms in der Kommandozeile zunaehst in den Pfad der TDDT.jar Datei wechseln und dann: 
java -jar TDDT.jar
eingeben


----notwendige Vorbereitungen vor Programmstart----


Vor Programmstart muessen die 'Uebungsdateien in den Ordner "'Uebungen" kopiert werden.
Die Form der 'Uebungsdateien kann in den beigefuegten Beispieldateien ersehen werden.
Noch eine Information: Der Klassenname fuer die CodeKlasse wird nach der 'Uebungsdatei benannt
und der Klassenname fuer die TestKlasse wird nach dem Klassennamen fuer die CodeKlasse + Test benannt.

Bsp: 
'Uebungsdatei: Beispiel.txt
Klassenname CodeKlasse: Beispiel
Klassenname TestKlasse: BeispielTest


!!! Achtung: 'Uebungdateien sollen nach gueltigen Klassennamen benannt werden!!!
 

----Programmfunktionen----


Eine kurze Zusammenfassung der Funktionen von den einzelnen Bestandteilen des Programms:

BabySteps:
Ist eine Funktion, die die Zeit des Nutzers fuer die Phasen in Red und Green limitiert.
Es wird vor dem Start des Hauptprogramms abgefragt, ob der Nutzer diese Funktion nutzen moechte.
Nach Ablauf der Zeit kehrt das Programm zur vorherigen Phase zurueck.
(Also bei Green -> Red und bei Red -> Red)

Tracking:
'Oeffnet ein Fenster in dem Statiken zur Programmnutzung angezeigt werden,
unter anderem wie lange der Nutzer in jeder Phase war und welche Meldungen 
bisher angezeigt wurden (bspw. Fehler, Meldungen oder Phasenwechsel)
 
Hilfe		
-> Benutzerhandbuch: 'Oeffnet diese Datei
-> Info: Zeigt Informationen zum Programm an

Next-Button: Iteriert in der Liste der 'Uebungsdateien nach unten
Previous-Button: Iteriert in der Liste der 'Uebungsdateien nach oben

Button mit 'Uebungsdatei-Name	
-> Klick: Startet das Hauptprogramm mit Konfigurationen aus der 'Uebungsdatei
-> Ruebergehen:	Eine Beschreibung der Uebung wird angezeigt


Nun eine etwas ausfuehrlichere Erklaerung zum Hauptprogramm:

Der Ablauf des Hauptprogramms ist in mehrere "Phasen" unterteilt.

Die einzelnen Phasen sind:
-Red
-Green
-Refactor

In Red wird der Benutzer aufgefordert Tests zu schreiben, 
wobei genau einer dieser Tests fehlschlagen muss.
Wenn diese Bedingung erfuellt ist kann zu Green gewechselt werden.
In Green wird der zu testende Code geschrieben.
Der Benutzer kann nach Wunsch wieder zurueck zu Red wechseln.
Wenn alle Tests erfolgreich sind kann der Benutzer zu Refactor wechseln.
In Refactor kann der Code aus Green verbessert werden.
Nach erfolgreichem Wechseln von Refactor zu Red wird der bisherige Code gespeichert 
und die ganze Prozedur startet von neu.
Weitere Informationen koennen auf folgender Seite gefunden werden:
http://www.frankwestphal.de/TestgetriebeneEntwicklung.html


Wir wuenschen noch viel Spass mit dem Programm!